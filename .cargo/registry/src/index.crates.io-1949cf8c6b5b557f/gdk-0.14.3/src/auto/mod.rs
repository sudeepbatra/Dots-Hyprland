// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

mod app_launch_context;
pub use self::app_launch_context::AppLaunchContext;

mod cursor;
pub use self::cursor::Cursor;

mod device;
pub use self::device::Device;

mod device_manager;
pub use self::device_manager::DeviceManager;

#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
mod device_pad;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::device_pad::{DevicePad, NONE_DEVICE_PAD};

#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
mod device_tool;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::device_tool::DeviceTool;

mod display;
pub use self::display::Display;

mod display_manager;
pub use self::display_manager::DisplayManager;

mod drag_context;
pub use self::drag_context::DragContext;

#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
mod drawing_context;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::drawing_context::DrawingContext;

mod frame_clock;
pub use self::frame_clock::FrameClock;

mod gl_context;
pub use self::gl_context::GLContext;

mod keymap;
pub use self::keymap::Keymap;

#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
mod monitor;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::monitor::Monitor;

mod screen;
pub use self::screen::Screen;

#[cfg(any(feature = "v3_20", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_20")))]
mod seat;
#[cfg(any(feature = "v3_20", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_20")))]
pub use self::seat::Seat;

mod visual;
pub use self::visual::Visual;

mod window;
pub use self::window::Window;

mod event_sequence;
pub use self::event_sequence::EventSequence;

mod frame_timings;
pub use self::frame_timings::FrameTimings;

mod enums;
pub use self::enums::AxisUse;
pub use self::enums::ByteOrder;
pub use self::enums::CrossingMode;
pub use self::enums::CursorType;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::enums::DevicePadFeature;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::enums::DeviceToolType;
pub use self::enums::DeviceType;
#[cfg(any(feature = "v3_20", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_20")))]
pub use self::enums::DragCancelReason;
pub use self::enums::DragProtocol;
pub use self::enums::EventType;
pub use self::enums::FullscreenMode;
pub use self::enums::GLError;
pub use self::enums::GrabOwnership;
pub use self::enums::GrabStatus;
pub use self::enums::Gravity;
pub use self::enums::InputMode;
pub use self::enums::InputSource;
pub use self::enums::ModifierIntent;
pub use self::enums::NotifyType;
pub use self::enums::OwnerChange;
pub use self::enums::PropMode;
pub use self::enums::PropertyState;
pub use self::enums::ScrollDirection;
pub use self::enums::SettingAction;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::enums::SubpixelLayout;
pub use self::enums::VisibilityState;
pub use self::enums::VisualType;
pub use self::enums::WindowEdge;
pub use self::enums::WindowType;
pub use self::enums::WindowTypeHint;
pub use self::enums::WindowWindowClass;

mod flags;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::flags::AnchorHints;
#[cfg(any(feature = "v3_22", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
pub use self::flags::AxisFlags;
pub use self::flags::DragAction;
pub use self::flags::EventMask;
pub use self::flags::FrameClockPhase;
pub use self::flags::ModifierType;
#[cfg(any(feature = "v3_20", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v3_20")))]
pub use self::flags::SeatCapabilities;
pub use self::flags::WMDecoration;
pub use self::flags::WMFunction;
pub use self::flags::WindowHints;
pub use self::flags::WindowState;

pub mod functions;

#[doc(hidden)]
pub mod traits {
    #[cfg(any(feature = "v3_22", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v3_22")))]
    pub use super::device_pad::DevicePadExt;
}
